/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport",
)

package com.thealvistar.iotconnect.device.client.models

import com.fasterxml.jackson.annotation.JsonProperty

/**
 * *
 * @param ruleType Rule type,   Send 1 or 2. 1: for standard rule, 2: for smart rule.  Note : Rule type must be 1 for edge template.
 * @param templateGuid Device Template Guid
 * @param name Rule Name
 * @param severityLevelGuid Severity Level Guid
 * @param conditionText Condition statement triggers Rule on telemetry data that meet specified criteria. Criteria are expressed in the form of predicates.  <div>Condition on attribute(localname) if device template is non gateway Eg. : </div><div>1) Temperature > 50</div><div>2) Temperature > 50 AND Humidity < 20</div><div>3) Temperature > 50 AND ( Humidity < 20 OR WaterLevel > 10 )</div><div>4) Status = \"on\"</div><div></div><div>Condition on attribute({tag}#{localname}) if device template has enabled gateway enabled Eg. : </div><div>1) Tag1#Temperature > 50</div><div>2) Tag1#Temperature > 50 AND Tag2#Humidity < 20</div><div>3) Tag1#Temperature > 50 AND ( Tag2#Humidity < 20 OR Tag2#WaterLevel > 10 )</div><div>4) Tag3#Status = \"on\"</div>
 * @param ignorePreference If <i>true</i> then Ignore preference will send the notification to all the target audience irrespective of their preference
 * @param ruleAudiences Interval audience details for device disconnect event. if <i>ruleType</i> is 3
 * @param reportingGroupGuid Device Reporting Group Guid
 * @param entityGuid Entity Guid. if <i>applyTo</i> is 1 or 2
 * @param applyTo Send 1, 2 or 3. 1: for all device of entity, 2: for all device of entity including child entities, 3: for device guid list.  Note: <i>applyTo</i> must be 3 for edge template.
 * @param devices Device guid list. Required if <i>applyTo</i> is 3
 * @param roles Role guid list. Notification will be sent to all users associated with these rules.
 * @param users User guid list. Notification will be sent to all users in the list.
 * @param deliveryMethod Notification delivery method. Eg. DeviceCommand, Email, Push, SignalR, WebHook, UI Alert, MQTT,UiNotification
 * @param commandGuid Command Guid. Required If <i>deliveryMethod</i> is DeviceCommand
 * @param parameterValue Command Value. Required if <i>deliveryMethod</i> is DeviceCommand
 * @param url Webhook url. Required If <i>deliveryMethod</i> is WebHook
 * @param headers Webhook headers. If <i>deliveryMethod</i> is WebHook
 * @param snoozeTime Snoonze time in unit to snooze rule once rule trigger if ruleType is 1 or 2
 * @param snoozeTimeUnit Snoonze time unit  1 : Minute,  2 : Hour,  3 : Day  Note : Default value is Minute if snoozeTime having value
 */

data class RuleCreateRequest(

    /* Rule type,   Send 1 or 2. 1: for standard rule, 2: for smart rule.  Note : Rule type must be 1 for edge template. */
    @field:JsonProperty("ruleType")
    val ruleType: kotlin.Int,

    /* Device Template Guid */
    @field:JsonProperty("templateGuid")
    val templateGuid: kotlin.String,

    /* Rule Name */
    @field:JsonProperty("name")
    val name: kotlin.String,

    /* Severity Level Guid */
    @field:JsonProperty("severityLevelGuid")
    val severityLevelGuid: kotlin.String,

    /* Condition statement triggers Rule on telemetry data that meet specified criteria. Criteria are expressed in the form of predicates.  <div>Condition on attribute(localname) if device template is non gateway Eg. : </div><div>1) Temperature > 50</div><div>2) Temperature > 50 AND Humidity < 20</div><div>3) Temperature > 50 AND ( Humidity < 20 OR WaterLevel > 10 )</div><div>4) Status = \"on\"</div><div></div><div>Condition on attribute({tag}#{localname}) if device template has enabled gateway enabled Eg. : </div><div>1) Tag1#Temperature > 50</div><div>2) Tag1#Temperature > 50 AND Tag2#Humidity < 20</div><div>3) Tag1#Temperature > 50 AND ( Tag2#Humidity < 20 OR Tag2#WaterLevel > 10 )</div><div>4) Tag3#Status = \"on\"</div> */
    @field:JsonProperty("conditionText")
    val conditionText: kotlin.String,

    /* If <i>true</i> then Ignore preference will send the notification to all the target audience irrespective of their preference */
    @field:JsonProperty("ignorePreference")
    val ignorePreference: kotlin.Boolean,

    /* Interval audience details for device disconnect event. if <i>ruleType</i> is 3 */
    @field:JsonProperty("ruleAudiences")
    val ruleAudiences: kotlin.collections.List<RuleAudience>? = null,

    /* Device Reporting Group Guid */
    @field:JsonProperty("reportingGroupGuid")
    val reportingGroupGuid: kotlin.String? = null,

    /* Entity Guid. if <i>applyTo</i> is 1 or 2 */
    @field:JsonProperty("entityGuid")
    val entityGuid: kotlin.String? = null,

    /* Send 1, 2 or 3. 1: for all device of entity, 2: for all device of entity including child entities, 3: for device guid list.  Note: <i>applyTo</i> must be 3 for edge template. */
    @field:JsonProperty("applyTo")
    val applyTo: kotlin.Int? = null,

    /* Device guid list. Required if <i>applyTo</i> is 3 */
    @field:JsonProperty("devices")
    val devices: kotlin.collections.List<kotlin.String>? = null,

    /* Role guid list. Notification will be sent to all users associated with these rules. */
    @field:JsonProperty("roles")
    val roles: kotlin.collections.List<kotlin.String>? = null,

    /* User guid list. Notification will be sent to all users in the list. */
    @field:JsonProperty("users")
    val users: kotlin.collections.List<kotlin.String>? = null,

    /* Notification delivery method. Eg. DeviceCommand, Email, Push, SignalR, WebHook, UI Alert, MQTT,UiNotification */
    @field:JsonProperty("deliveryMethod")
    val deliveryMethod: kotlin.collections.List<kotlin.String>? = null,

    /* Command Guid. Required If <i>deliveryMethod</i> is DeviceCommand */
    @field:JsonProperty("commandGuid")
    val commandGuid: kotlin.String? = null,

    /* Command Value. Required if <i>deliveryMethod</i> is DeviceCommand */
    @field:JsonProperty("parameterValue")
    val parameterValue: kotlin.String? = null,

    /* Webhook url. Required If <i>deliveryMethod</i> is WebHook */
    @field:JsonProperty("url")
    val url: kotlin.String? = null,

    /* Webhook headers. If <i>deliveryMethod</i> is WebHook */
    @field:JsonProperty("headers")
    val headers: kotlin.collections.List<WebHookBaseHeaderDetails>? = null,

    /* Snoonze time in unit to snooze rule once rule trigger if ruleType is 1 or 2 */
    @field:JsonProperty("snoozeTime")
    val snoozeTime: kotlin.Int? = null,

    /* Snoonze time unit  1 : Minute,  2 : Hour,  3 : Day  Note : Default value is Minute if snoozeTime having value */
    @field:JsonProperty("snoozeTimeUnit")
    val snoozeTimeUnit: kotlin.Int? = null,

)
